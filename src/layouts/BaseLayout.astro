---
import BaseHead from '../components/BaseHead.astro'
import { CDN_URL } from '~/config'
import { ViewTransitions } from 'astro:transitions'
const { meta, isBlog } = Astro.props

// markdown 样式 css
const gfmCssPath = `${CDN_URL}/static/styles/gfm.css`
---

<!DOCTYPE html>
<html lang="en" class="text-base h-screen">
  <head>
    <BaseHead {...meta} />
    {
      isBlog && (
        <head>
          <link rel="stylesheet" href={gfmCssPath} />
        </head>
      )
    }
  </head>
  <ViewTransitions fallback="swap" />
  <body class="antialiased">
    <slot />
    <script>
      const setDarkMode = () => {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
      }

      const setThemeToggle = () => {
        const menuIcon = document.querySelector('#toggle-menu')
        menuIcon.addEventListener('click', () => {
          menuIcon.classList.toggle('expanded')
          document.body.classList.toggle('overflow-hidden')
          document.getElementById('header')?.classList.toggle('h-screen')
          document.querySelector('#header nav')?.classList.toggle('hidden')
        })

        const themeIcons = document.querySelectorAll('[data-toggle-theme]')
        if (themeIcons && themeIcons.length) {
          themeIcons.forEach((elem) => {
            elem.addEventListener('click', async (e) => {
              const x = e.clientX
              const y = e.clientY

              const clipPath = [
                `circle(0px at ${x}px ${y}px)`,
                `circle(${Math.hypot(Math.max(x, innerWidth - x), Math.max(y, innerHeight - y))}px at ${x}px ${y}px)`,
              ]

              const isDark = !document.documentElement.classList.contains('dark')

              await document.startViewTransition(() => {
                document.documentElement.classList.toggle('dark')
                localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light'
              }).ready
              document.documentElement.animate(
                { clipPath: isDark ? clipPath.reverse() : clipPath },
                {
                  duration: 300,
                  easing: 'ease-in',
                  pseudoElement: `::view-transition-${isDark ? 'old' : 'new'}(root)`,
                }
              )
            })
          })
        }
      }

      window.onload = function () {
        setThemeToggle()
      }

      // 在视图过渡动画导航时运行
      document.addEventListener('astro:after-swap', setDarkMode)

      document.addEventListener('astro:after-swap', setThemeToggle)
    </script>
    <style is:global>
      ::view-transition-image-pair(root) {
        isolation: auto;
      }
      ::view-transition-old(root),
      ::view-transition-new(root) {
        animation: none;
        mix-blend-mode: normal;
        display: block;
      }
      ::view-transition-old(root),
      ::view-transition-new(root) {
        animation: none;
        mix-blend-mode: normal;
      }
      ::view-transition-old(root),
      .dark::view-transition-new(root) {
        z-index: 1;
      }
      ::view-transition-new(root),
      .dark::view-transition-old(root) {
        z-index: 9999;
      }

      html {
        scroll-padding-top: 60px;
      }
      @media (max-width: 640px) {
        html {
          scroll-padding-top: 110px;
        }
      }
      /* body 根据 dark 主题改变背景颜色 */
      body {
        @apply bg-gray-100 dark:bg-[#17181c];
        height: calc(100vh - 60px);
      }
      img {
        content-visibility: auto;
      }
      #toggle-menu path {
        @apply transition;
      }
      #toggle-menu.expanded g > path:first-child {
        @apply -rotate-45 translate-y-[15px] translate-x-[-3px];
      }

      #toggle-menu.expanded g > path:last-child {
        @apply rotate-45 translate-y-[-8px] translate-x-[14px];
      }
    </style>
  </body>
</html>
