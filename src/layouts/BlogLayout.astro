---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import PageLayout from '~/layouts/PageLayout.astro'
import PostTags from '~/components/Tags.astro'
import PostFooter from '~/components/PostFooter.astro'
import RightSidebar from '~/components/RightSidebar.astro'

type Heading = {
  depth: number
  slug: string
  text: string
}

type Props = CollectionEntry<'blog'>['data'] & {
  headings: Heading[]
}

const basename = import.meta.env.BASE_URL

const { title, description, pubDate, image, tags, category, headings } = Astro.props

const tocConfig = {
  minHeadingLevel: 1,
  maxHeadingLevel: 4,
}

const posts = (await getCollection('blog'))
  .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf())
  .filter((post) => post.data.title !== title)
  .slice(0, 5)

const meta = {
  title: title,
  description: description,
  image: image,
}
---

<PageLayout {meta} isBlog={true}>
  <div class="flex w-full flex-col-reverse md:flex-row justify-center">
    <div
      class="bg-white w-full md:w-[50%] min-w-[50%] max-w-3xl rounded-lg dark:text-white dark:bg-[#24272d] border dark:border-[#353840] mt-10 md:mt-0"
    >
      <section class="px-6 py-6 mx-auto max-w-3xl">
        <header>
          <h1
            class="text-center text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
            id="_top"
          >
            {title}
          </h1>
          <div class="flex justify-center mb-4">
            {
              pubDate && (
                <div>
                  发表日期： <time>{pubDate}</time>
                </div>
              )
            }
            {
              category && (
                <div class="ml-4">
                  分类：
                  <a class="hover:text-blue-500" href={`${basename}categories/${category}/`}>
                    {category}
                  </a>
                </div>
              )
            }
          </div>
        </header>
        <article class="container markdown-body dark:text-white dark:bg-[#24272d]">
          {image && <img class="w-full rounded-lg" src={image} alt="descriptive text" />}
          <div class="mt-6">
            <slot />
          </div>
        </article>
        {tags && tags.length && <PostTags class="text-base" tags={tags} />}
        <PostFooter />
      </section>
    </div>
    <RightSidebar headings={headings} tocConfig={tocConfig} />
  </div>
</PageLayout>
